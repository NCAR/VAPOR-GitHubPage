\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\babel@aux{english}{}
\newlabel{index::doc}{{}{1}{}{section*.2}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {1}DART Lanai Differences from Kodiak Release Notes}{3}{chapter.1}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{loliteral-block}{\addvspace {10\p@ }}
\newlabel{docs/Lanai_diffs_from_Kodiak::doc}{{1}{3}{DART Lanai Differences from Kodiak Release Notes}{chapter.1}{}}
\newlabel{docs/Lanai_diffs_from_Kodiak:dart-lanai-differences-from-kodiak-release-notes}{{1}{3}{DART Lanai Differences from Kodiak Release Notes}{chapter.1}{}}
\newlabel{docs/Lanai_diffs_from_Kodiak:welcome-to-dart-s-documentation}{{1}{3}{DART Lanai Differences from Kodiak Release Notes}{chapter.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {1.1}Overview}{3}{section.1.1}}
\newlabel{docs/Lanai_diffs_from_Kodiak:overview}{{1.1}{3}{Overview}{section.1.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {1.2}Changes to Core DART routines}{3}{section.1.2}}
\newlabel{docs/Lanai_diffs_from_Kodiak:changes-to-core-dart-routines}{{1.2}{3}{Changes to Core DART routines}{section.1.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.1}\textbar {}}{4}{subsection.1.2.1}}
\newlabel{docs/Lanai_diffs_from_Kodiak:id1}{{1.2.1}{4}{\textbar {}}{subsection.1.2.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {1.3}New Models or Changes to Existing Models}{4}{section.1.3}}
\newlabel{docs/Lanai_diffs_from_Kodiak:new-models-or-changes-to-existing-models}{{1.3}{4}{New Models or Changes to Existing Models}{section.1.3}{}}
\@writefile{toc}{\contentsline {section}{\numberline {1.4}New or changed Forward Operators}{6}{section.1.4}}
\newlabel{docs/Lanai_diffs_from_Kodiak:new-or-changed-forward-operators}{{1.4}{6}{New or changed Forward Operators}{section.1.4}{}}
\@writefile{toc}{\contentsline {section}{\numberline {1.5}Observation Converters}{7}{section.1.5}}
\newlabel{docs/Lanai_diffs_from_Kodiak:observation-converters}{{1.5}{7}{Observation Converters}{section.1.5}{}}
\@writefile{toc}{\contentsline {section}{\numberline {1.6}New or updated DART Diagnostics}{8}{section.1.6}}
\newlabel{docs/Lanai_diffs_from_Kodiak:new-or-updated-dart-diagnostics}{{1.6}{8}{New or updated DART Diagnostics}{section.1.6}{}}
\@writefile{toc}{\contentsline {section}{\numberline {1.7}Tutorial, Scripting, Setup, Builds}{9}{section.1.7}}
\newlabel{docs/Lanai_diffs_from_Kodiak:tutorial-scripting-setup-builds}{{1.7}{9}{Tutorial, Scripting, Setup, Builds}{section.1.7}{}}
\@writefile{toc}{\contentsline {section}{\numberline {1.8}Terms of Use}{9}{section.1.8}}
\newlabel{docs/Lanai_diffs_from_Kodiak:terms-of-use}{{1.8}{9}{Terms of Use}{section.1.8}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {2}Fortran}{11}{chapter.2}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{loliteral-block}{\addvspace {10\p@ }}
\newlabel{docs/auto-doc:fortran}{{2}{11}{Fortran}{chapter.2}{}}
\newlabel{docs/auto-doc::doc}{{2}{11}{Fortran}{chapter.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.1}Closest Member Tool}{11}{section.2.1}}
\newlabel{docs/auto-doc:closest-member-tool}{{2.1}{11}{Closest Member Tool}{section.2.1}{}}
\newlabel{docs/auto-doc:f/closest_member_tool}{{2.1}{11}{Closest Member Tool}{section*.3}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {3}Conversion process}{13}{chapter.3}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{loliteral-block}{\addvspace {10\p@ }}
\newlabel{docs/Process::doc}{{3}{13}{Conversion process}{chapter.3}{}}
\newlabel{docs/Process:conversion-process}{{3}{13}{Conversion process}{chapter.3}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3.1}1. Move from Subversion server to Github.}{13}{section.3.1}}
\newlabel{docs/Process:move-from-subversion-server-to-github}{{3.1}{13}{1. Move from Subversion server to Github}{section.3.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1.1}A. In docker container use git svn clone to create a local Git clone of the desired Subversion branch/trunk.}{13}{subsection.3.1.1}}
\newlabel{docs/Process:a-in-docker-container-use-git-svn-clone-to-create-a-local-git-clone-of-the-desired-subversion-branch-trunk}{{3.1.1}{13}{A. In docker container use git svn clone to create a local Git clone of the desired Subversion branch/trunk}{subsection.3.1.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1.2}B. Create an empty GitHub repository under the desired account at github.com.}{13}{subsection.3.1.2}}
\newlabel{docs/Process:b-create-an-empty-github-repository-under-the-desired-account-at-github-com}{{3.1.2}{13}{B. Create an empty GitHub repository under the desired account at github.com}{subsection.3.1.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1.3}C. Push local git clone to GitHub repo.}{13}{subsection.3.1.3}}
\newlabel{docs/Process:c-push-local-git-clone-to-github-repo}{{3.1.3}{13}{C. Push local git clone to GitHub repo}{subsection.3.1.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1.4}D. It is possible that there will be an error that causes the push to fail because GitHub does not allow files bigger than 100 MB. If that is the case these files will have to be removed in order to push to GitHub (They can be added later to the latest commit/revision but their commit/revision history cannot be kept). Use the git filter-branch command to remove necessary files.}{13}{subsection.3.1.4}}
\newlabel{docs/Process:d-it-is-possible-that-there-will-be-an-error-that-causes-the-push-to-fail-because-github-does-not-allow-files-bigger-than-100-mb-if-that-is-the-case-these-files-will-have-to-be-removed-in-order-to-push-to-github-they-can-be-added-later-to-the-latest-commit-revision-but-their-commit-revision-history-cannot-be-kept-use-the-git-filter-branch-command-to-remove-necessary-files}{{3.1.4}{13}{D. It is possible that there will be an error that causes the push to fail because GitHub does not allow files bigger than 100 MB. If that is the case these files will have to be removed in order to push to GitHub (They can be added later to the latest commit/revision but their commit/revision history cannot be kept). Use the git filter-branch command to remove necessary files}{subsection.3.1.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1.5}E. Now push to GitHub again and there should be no issues. (Use the \IeC {\textemdash }force option with git push).}{14}{subsection.3.1.5}}
\newlabel{docs/Process:e-now-push-to-github-again-and-there-should-be-no-issues-use-the-force-option-with-git-push}{{3.1.5}{14}{E. Now push to GitHub again and there should be no issues. (Use the â€”force option with git push)}{subsection.3.1.5}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1.6}F. If the Subversion branch was not the current working branch create a new branch in Github cloned from the Master branch.}{14}{subsection.3.1.6}}
\newlabel{docs/Process:f-if-the-subversion-branch-was-not-the-current-working-branch-create-a-new-branch-in-github-cloned-from-the-master-branch}{{3.1.6}{14}{F. If the Subversion branch was not the current working branch create a new branch in Github cloned from the Master branch}{subsection.3.1.6}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3.2}2. Convert existing documentation to sphinx-doc style documentation. (This could be done either before or after the SVN branches have been pushed to GitHub.)}{14}{section.3.2}}
\newlabel{docs/Process:convert-existing-documentation-to-sphinx-doc-style-documentation-this-could-be-done-either-before-or-after-the-svn-branches-have-been-pushed-to-github}{{3.2}{14}{2. Convert existing documentation to sphinx-doc style documentation. (This could be done either before or after the SVN branches have been pushed to GitHub.)}{section.3.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.1}A. From the local machine create a clone of the new Github repository.}{14}{subsection.3.2.1}}
\newlabel{docs/Process:a-from-the-local-machine-create-a-clone-of-the-new-github-repository}{{3.2.1}{14}{A. From the local machine create a clone of the new Github repository}{subsection.3.2.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.2}B. Move all desired html files (or other convertible filetypes) that relate to documentation to a single directory.}{14}{subsection.3.2.2}}
\newlabel{docs/Process:b-move-all-desired-html-files-or-other-convertible-filetypes-that-relate-to-documentation-to-a-single-directory}{{3.2.2}{14}{B. Move all desired html files (or other convertible filetypes) that relate to documentation to a single directory}{subsection.3.2.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.3}C. To convert the html file to markdown (.md) which is used by sphinx use pandoc.}{14}{subsection.3.2.3}}
\newlabel{docs/Process:c-to-convert-the-html-file-to-markdown-md-which-is-used-by-sphinx-use-pandoc}{{3.2.3}{14}{C. To convert the html file to markdown (.md) which is used by sphinx use pandoc}{subsection.3.2.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.4}D. Next push the changes to GitHub.}{15}{subsection.3.2.4}}
\newlabel{docs/Process:d-next-push-the-changes-to-github}{{3.2.4}{15}{D. Next push the changes to GitHub}{subsection.3.2.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.5}E. Open an interactive docker container and clone the new Github repo.}{15}{subsection.3.2.5}}
\newlabel{docs/Process:e-open-an-interactive-docker-container-and-clone-the-new-github-repo}{{3.2.5}{15}{E. Open an interactive docker container and clone the new Github repo}{subsection.3.2.5}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.6}F. Choose a location for the sphinx-doc setup. Note that file paths are important for sphinx and particularly for the auto-documenting features. Sphinx likes to use paths relative to the location of the conf.py and index.rst files so it may be simplest to set these up in the root directory, although there is a way to setup an absolute path in the config (which I haven\IeC {\textquoteright }t gotten to work with GitHub).}{15}{subsection.3.2.6}}
\newlabel{docs/Process:f-choose-a-location-for-the-sphinx-doc-setup-note-that-file-paths-are-important-for-sphinx-and-particularly-for-the-auto-documenting-features-sphinx-likes-to-use-paths-relative-to-the-location-of-the-conf-py-and-index-rst-files-so-it-may-be-simplest-to-set-these-up-in-the-root-directory-although-there-is-a-way-to-setup-an-absolute-path-in-the-config-which-i-havent-gotten-to-work-with-github}{{3.2.6}{15}{F. Choose a location for the sphinx-doc setup. Note that file paths are important for sphinx and particularly for the auto-documenting features. Sphinx likes to use paths relative to the location of the conf.py and index.rst files so it may be simplest to set these up in the root directory, although there is a way to setup an absolute path in the config (which I havenâ€™t gotten to work with GitHub)}{subsection.3.2.6}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.7}G. Once in the desired directory use the sphinx quickstart command to start an interactive process that will generate all the required files for sphinx-doc.}{15}{subsection.3.2.7}}
\newlabel{docs/Process:g-once-in-the-desired-directory-use-the-sphinx-quickstart-command-to-start-an-interactive-process-that-will-generate-all-the-required-files-for-sphinx-doc}{{3.2.7}{15}{G. Once in the desired directory use the sphinx quickstart command to start an interactive process that will generate all the required files for sphinx-doc}{subsection.3.2.7}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.8}H. There should now be a conf.py file that contains the configuration info that was set up during the quickstart. To allow sphinx to read markdown files add \IeC {\textquoteleft }recommonmark\IeC {\textquoteright } to the sphinx extensions section of the conf.py file. This should be near the top of the file.}{16}{subsection.3.2.8}}
\newlabel{docs/Process:h-there-should-now-be-a-conf-py-file-that-contains-the-configuration-info-that-was-set-up-during-the-quickstart-to-allow-sphinx-to-read-markdown-files-add-recommonmark-to-the-sphinx-extensions-section-of-the-conf-py-file-this-should-be-near-the-top-of-the-file}{{3.2.8}{16}{H. There should now be a conf.py file that contains the configuration info that was set up during the quickstart. To allow sphinx to read markdown files add â€˜recommonmarkâ€™ to the sphinx extensions section of the conf.py file. This should be near the top of the file}{subsection.3.2.8}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.9}I. There is also an index.rst file (or whatever name it was given during the quick start). This file contains the Table of Contents Tree (toctree) which is where you can list the markdown files that you wish to include in your documentation using their relative path to the index.rst file and excluding the .md extension.}{16}{subsection.3.2.9}}
\newlabel{docs/Process:i-there-is-also-an-index-rst-file-or-whatever-name-it-was-given-during-the-quick-start-this-file-contains-the-table-of-contents-tree-toctree-which-is-where-you-can-list-the-markdown-files-that-you-wish-to-include-in-your-documentation-using-their-relative-path-to-the-index-rst-file-and-excluding-the-md-extension}{{3.2.9}{16}{I. There is also an index.rst file (or whatever name it was given during the quick start). This file contains the Table of Contents Tree (toctree) which is where you can list the markdown files that you wish to include in your documentation using their relative path to the index.rst file and excluding the .md extension}{subsection.3.2.9}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.10}J. Once the toctree has been updated. Use the commands from the makefile to create an html version and a pdf version of the documents.}{16}{subsection.3.2.10}}
\newlabel{docs/Process:j-once-the-toctree-has-been-updated-use-the-commands-from-the-makefile-to-create-an-html-version-and-a-pdf-version-of-the-documents}{{3.2.10}{16}{J. Once the toctree has been updated. Use the commands from the makefile to create an html version and a pdf version of the documents}{subsection.3.2.10}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.11}K. Push the changes to GitHub like in step d.}{17}{subsection.3.2.11}}
\newlabel{docs/Process:k-push-the-changes-to-github-like-in-step-d}{{3.2.11}{17}{K. Push the changes to GitHub like in step d}{subsection.3.2.11}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3.3}3. Set up the sphinx-fortran extension. (This can all be done on GitHub or in a local clone of the repository but the process is the same.)}{17}{section.3.3}}
\newlabel{docs/Process:set-up-the-sphinx-fortran-extension-this-can-all-be-done-on-github-or-in-a-local-clone-of-the-repository-but-the-process-is-the-same}{{3.3}{17}{3. Set up the sphinx-fortran extension. (This can all be done on GitHub or in a local clone of the repository but the process is the same.)}{section.3.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.1}A. Open the conf.py configuration file and add the sphinx fortran extensions to the list of sphinx extensions this should be near the top of the document.}{17}{subsection.3.3.1}}
\newlabel{docs/Process:a-open-the-conf-py-configuration-file-and-add-the-sphinx-fortran-extensions-to-the-list-of-sphinx-extensions-this-should-be-near-the-top-of-the-document}{{3.3.1}{17}{A. Open the conf.py configuration file and add the sphinx fortran extensions to the list of sphinx extensions this should be near the top of the document}{subsection.3.3.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.2}B. Below the extensions add a source for the fortran files to be parsed. This can be a list of files or a relative path using wildcards.}{17}{subsection.3.3.2}}
\newlabel{docs/Process:b-below-the-extensions-add-a-source-for-the-fortran-files-to-be-parsed-this-can-be-a-list-of-files-or-a-relative-path-using-wildcards}{{3.3.2}{17}{B. Below the extensions add a source for the fortran files to be parsed. This can be a list of files or a relative path using wildcards}{subsection.3.3.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.3}C. All setup should now be complete and the sphinx-fortran extension commands can now be used to document fortran programs, modules, etc\IeC {\textellipsis }}{18}{subsection.3.3.3}}
\newlabel{docs/Process:c-all-setup-should-now-be-complete-and-the-sphinx-fortran-extension-commands-can-now-be-used-to-document-fortran-programs-modules-etc}{{3.3.3}{18}{C. All setup should now be complete and the sphinx-fortran extension commands can now be used to document fortran programs, modules, etcâ€¦}{subsection.3.3.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.4}D. Now when the html or pdf sphinx files are generated the auto-documentation should be included.}{18}{subsection.3.3.4}}
\newlabel{docs/Process:d-now-when-the-html-or-pdf-sphinx-files-are-generated-the-auto-documentation-should-be-included}{{3.3.4}{18}{D. Now when the html or pdf sphinx files are generated the auto-documentation should be included}{subsection.3.3.4}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {4}Indices and tables}{19}{chapter.4}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{loliteral-block}{\addvspace {10\p@ }}
\newlabel{index:indices-and-tables}{{4}{19}{Indices and tables}{chapter.4}{}}
\@writefile{toc}{\contentsline {chapter}{Index}{21}{section*.4}}
